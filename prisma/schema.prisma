generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                                                   Int           @id @default(autoincrement())
  balance                                              Decimal       @db.Decimal(15, 2)
  created_at                                           DateTime      @default(now()) @db.Timestamp(6)
  updated_at                                           DateTime      @default(now()) @db.Timestamp(6)
  provision                                            Decimal       @default(0) @db.Decimal(15, 2)
  cards                                                card[]
  receiver_transactions                                transaction[] @relation("transaction_receiver_account_idToaccount")
  sender_transactions   transaction[] @relation("transaction_sender_account_idToaccount")
}

model auditlog {
  id           Int      @id @default(autoincrement())
  action       String   @db.VarChar(255)
  performed_at DateTime @default(now()) @db.Timestamp(6)
}

model card {
  id              Int           @id @default(autoincrement())
  account_id      Int
  number          String        @unique(map: "unique_card_number") @db.VarChar(16)
  expiration_date DateTime      @db.Date
  cvv             String        @db.Char(3)
  account         account       @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transactions    transaction[]
}

model transaction {
  id                                               Int      @id @default(autoincrement())
  sender_account_id                                Int?
  receiver_account_id                              Int?
  sender_card_id                                   Int?
  amount                                           Decimal  @db.Decimal(15, 2)
  transaction_date                                 DateTime @default(now()) @db.Timestamp(6)
  description                                      String?  @db.VarChar(255)
  receiver_account                                 account? @relation("transaction_receiver_account_idToaccount", fields: [receiver_account_id], references: [id], onUpdate: NoAction)
  sender_account                                   account? @relation("transaction_sender_account_idToaccount", fields: [sender_account_id], references: [id], onUpdate: NoAction)
  sender_card                                      card?    @relation(fields: [sender_card_id], references: [id], onUpdate: NoAction)
}
